# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Categories {
  total: Int!
  categories: [CategoryType!]!
}

input CategoryCreateInput {
  title: String!
}

type CategoryType {
  title: String!
  slug: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

input CategoryUpdateInput {
  title: String!
}

input CreatePostInput {
  title: String!
  content: String!
  categories: [String!]!
  images: [String!]!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Image {
  url: String!
}

type Mutation {
  createUserByAdmin(role: String!, credentials: CreateUserInput!): UserType!
  removeUser(email: String!): UserType!
  recoverUser(email: String!): UserType!
  verifyUser(token: String!): UserType!
  setPasswordResetToken(email: String!): UserType!
  resetPasswordByToken(input: ResetPasswordInput!): UserType!
  refreshVerificationToken(email: String!): Boolean!
  updateUser(input: UpdateUserInput!): UserType!
  register(credentials: CreateUserInput!): UserType!
  logIn(credentials: UserLogInInput!): UserType!
  logOut: Boolean!
  createCategory(input: CategoryCreateInput!): CategoryType!
  removeCategory(title: String!): CategoryType!
  recoverCategory(title: String!): CategoryType!
  updateCategory(input: CategoryUpdateInput!, title: String!): CategoryType!
  createPost(input: CreatePostInput!): PostType!
}

type PostType {
  title: String!
  slug: String!
  content: String!
  isActive: Boolean!
  images: [Image!]!
  user: UserType!
  categories: [CategoryType!]!
}

type Query {
  findOneUser(email: String!): UserType!
  findAllUsers(page: Float!, limit: Float!): Users!
  getMe: UserType!
  findAllCategories(page: Float!, limit: Float!): Categories!
  findOneByTitle(title: String!): CategoryType!
  findOneBySlug(slug: String!): CategoryType!
  hello: String!
}

input ResetPasswordInput {
  passwordResetToken: String!
  password: String!
}

input UpdateUserInput {
  firstName: String!
  lastName: String!
  password: String
}

input UserLogInInput {
  email: String!
  password: String!
}

"""The basic directions"""
enum UserRole {
  SUPERADMIN
  ADMIN
  USER
}

type Users {
  total: Int!
  users: [UserType!]!
}

type UserType {
  firstName: String!
  lastName: String!
  email: String!
  role: UserRole!
  verified: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}
